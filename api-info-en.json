{"document":{"tokenList":[{"name":"x-token","dataType":"String","paramType":"1","desc":"user oauth","hasTextarea":"1","hasToken":"1"}],"responseList":[{"code":200,"msg":"success"},{"code":400,"msg":"abc","comment":"{\n  \"id\" : 123,  /* user id */\n  \"name\" : \"Tom\",  /* user name */\n  \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n  \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n  \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n  \"ones\" : [ {  /* a List example */\n    \"oneId\" : 111,  /* one id */\n    \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n  } ],\n  \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n    \"0\" : {\n      \"twoId\" : 222,  /* two id */\n      \"twoArray\" : [ \"abc\" ]  /* array */\n    }\n  },\n  \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n    \"?\" : [ {\n      \"threeId\" : 222,  /* three id */\n      \"threeList\" : [ \"xyz\" ]  /* list */\n    } ]\n  },\n  \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n  \"updateTime\" : \"2018-12-31\"  /* time2 */\n}"},{"code":501,"msg":"xxx","comment":"{\n  \"?\" : {\n    \"id\" : 123,  /* user id */\n    \"name\" : \"Tom\",  /* user name */\n    \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n    \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n    \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n    \"ones\" : [ {  /* a List example */\n      \"oneId\" : 111,  /* one id */\n      \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n    } ],\n    \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n      \"0\" : {\n        \"twoId\" : 222,  /* two id */\n        \"twoArray\" : [ \"abc\" ]  /* array */\n      }\n    },\n    \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n      \"?\" : [ {\n        \"threeId\" : 222,  /* three id */\n        \"threeList\" : [ \"xyz\" ]  /* list */\n      } ]\n    },\n    \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n    \"updateTime\" : \"2018-12-31\"  /* time2 */\n  }\n}"},{"code":503,"msg":"yyy","comment":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : [ {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"?\" : {\n      \"id\" : 123,  /* user id */\n      \"name\" : \"Tom\",  /* user name */\n      \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n      \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n      \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n      \"ones\" : [ {  /* a List example */\n        \"oneId\" : 111,  /* one id */\n        \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n      } ],\n      \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n        \"0\" : {\n          \"twoId\" : 222,  /* two id */\n          \"twoArray\" : [ \"abc\" ]  /* array */\n        }\n      },\n      \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n        \"?\" : [ {\n          \"threeId\" : 222,  /* three id */\n          \"threeList\" : [ \"xyz\" ]  /* list */\n        } ]\n      },\n      \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n      \"updateTime\" : \"2018-12-31\"  /* time2 */\n    }\n  } ]\n}"},{"code":500,"msg":"zzz","comment":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"total\" : 0,  /* SELECT COUNT(*) FROM ... */\n    \"list\" : [ {  /* SELECT ... FROM ... LIMIT 0, 15 */\n      \"id\" : 123,  /* user id */\n      \"name\" : \"Tom\",  /* user name */\n      \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n      \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n      \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n      \"ones\" : [ {  /* a List example */\n        \"oneId\" : 111,  /* one id */\n        \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n      } ],\n      \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n        \"0\" : {\n          \"twoId\" : 222,  /* two id */\n          \"twoArray\" : [ \"abc\" ]  /* array */\n        }\n      },\n      \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n        \"?\" : [ {\n          \"threeId\" : 222,  /* three id */\n          \"threeList\" : [ \"xyz\" ]  /* list */\n        } ]\n      },\n      \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n      \"updateTime\" : \"2018-12-31\"  /* time2 */\n    } ]\n  }\n}"}],"enumInfo":{"ProductType":["Normal","Discount"],"Gender":{"0":"Nil","1":"Male","2":"Female"},"UserType":{"1":"Normal","10":"Vip"}},"moduleList":[{"name":"user","info":"user","urlList":[{"title":"user list","desc":"manager query","develop":"xxx - xxx@xyz.com","exampleUrl":"/api-info-en/get-user.json","method":"GET","url":"/user","paramList":[{"name":"userId","dataType":"long","hasMust":"1","desc":"user id"},{"name":"type","dataType":"enum(ProductType)","hasMust":"1","desc":"product type(Normal, Discount)"},{"name":"gender","dataType":"enum(Gender)","showDataType":"int","desc":"user gender(0:Nil, 1:Male, 2:Female)"},{"name":"createTime","dataType":"Date","hasMust":"1","desc":"MM/DD/YYYY HH:mm:ss","datePattern":"MM/DD/YYYY HH:mm:ss"},{"name":"page","dataType":"int","desc":"Current page"},{"name":"limit","dataType":"int","desc":"Number of pages per page"}],"id":"get-user","commentJson":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"total\" : 0,  /* SELECT COUNT(*) FROM ... */\n    \"list\" : [ {  /* SELECT ... FROM ... LIMIT 0, 15 */\n      \"id\" : 123,  /* user id */\n      \"name\" : \"Tom\",  /* user name */\n      \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n      \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n      \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n      \"ones\" : [ {  /* a List example */\n        \"oneId\" : 111,  /* one id */\n        \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n      } ],\n      \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n        \"0\" : {\n          \"twoId\" : 222,  /* two id */\n          \"twoArray\" : [ \"abc\" ]  /* array */\n        }\n      },\n      \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n        \"?\" : [ {\n          \"threeId\" : 222,  /* three id */\n          \"threeList\" : [ \"xyz\" ]  /* list */\n        } ]\n      },\n      \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n      \"updateTime\" : \"2018-12-31\"  /* time2 */\n    } ]\n  }\n}"},{"title":"user info","develop":"xxx - xxx@xyz.com","exampleUrl":"/api-info-en/get-user-info.json","method":"GET","url":"/user/info","paramList":[{"name":"type","dataType":"enum(UserType)","desc":"user type(1:Normal, 10:Vip)"}],"returnList":[{"name":"msg","type":"String","desc":"Return message. for example: address add success. etc..."},{"name":"data","type":"object","desc":"Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;total","type":"int","desc":"SELECT COUNT(*) FROM ..."},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;list","type":"list","desc":"SELECT ... FROM ... LIMIT 0, 15"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id","type":"long","desc":"user id"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name","type":"String","desc":"user name"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gender","type":"enum(Gender)","desc":"user gender(0:Nil, 1:Male, 2:Female)"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;productTypes","type":"enum(ProductType)[]","desc":"product type(Normal, Discount)"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;userTypes","type":"enum(UserType)","desc":"user type(1:Normal, 10:Vip)"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ones","type":"demoOneVo","desc":"a List example"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oneId","type":"long","desc":"one id"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one","type":"String","desc":"str"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;twos","type":"map","desc":"a Map example, key is int, still output as \"0\" string when serializing"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0","type":"int","desc":""},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;twoId","type":"long","desc":"two id"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;twoArray","type":"String[]","desc":"array"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;threes","type":"map","desc":"a Map, key is a String, which is output as \"?\" when serialized"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;?","type":"String","desc":""},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;threeId","type":"long","desc":"three id"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;threeList","type":"String","desc":"list"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;createTime","type":"Date","desc":"time1"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;updateTime","type":"Date","desc":"time2"}],"id":"get-user-info","commentJson":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : {\n    \"total\" : 0,\n    \"list\" : [ {\n      \"id\" : 123,\n      \"name\" : \"Tom\",\n      \"gender\" : 1,\n      \"productTypes\" : [ \"Discount\" ],\n      \"userTypes\" : [ 10 ],\n      \"ones\" : [ {\n        \"oneId\" : 111,\n        \"one\" : \"<span style='color:red;'>rich text</span>\"\n      } ],\n      \"twos\" : {\n        \"0\" : {\n          \"twoId\" : 222,\n          \"twoArray\" : [ \"abc\" ]\n        }\n      },\n      \"threes\" : {\n        \"?\" : [ {\n          \"threeId\" : 222,\n          \"threeList\" : [ \"xyz\" ]\n        } ]\n      },\n      \"createTime\" : \"01/13/2018 04:13:14\",\n      \"updateTime\" : \"2018-12-31\"\n    } ]\n  }\n}"},{"title":"user RequestBody","develop":"xxx - xxx@xyz.com","exampleUrl":"/api-info-en/post-user-detail.json","method":"POST","url":"/user/detail","requestBody":"1","paramList":[{"name":"userId","dataType":"long","hasMust":"1","desc":"user id"},{"name":"gender","dataType":"enum(Gender)","showDataType":"int","desc":"gender(0:Nil, 1:Male, 2:Female)","style":"color:green"}],"id":"post-user-detail","commentJson":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : [ {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"id\" : 123,  /* user id */\n    \"name\" : \"Tom\",  /* user name */\n    \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n    \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n    \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n    \"ones\" : [ {  /* a List example */\n      \"oneId\" : 111,  /* one id */\n      \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n    } ],\n    \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n      \"0\" : {\n        \"twoId\" : 222,  /* two id */\n        \"twoArray\" : [ \"abc\" ]  /* array */\n      }\n    },\n    \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n      \"?\" : [ {\n        \"threeId\" : 222,  /* three id */\n        \"threeList\" : [ \"xyz\" ]  /* list */\n      } ]\n    },\n    \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n    \"updateTime\" : \"2018-12-31\"  /* time2 */\n  } ]\n}"},{"title":"user detail","desc":"when use click own avatar","develop":"xxx - xxx@xyz.com","exampleUrl":"/api-info-en/post-user-id.json","method":"POST","url":"/user/{id}","paramList":[{"name":"id","dataType":"long","hasMust":"1","desc":"user id","example":"1"}],"responseList":[{"code":200,"msg":"success, operate data"},{"code":500,"msg":"error, show response body to customer"}],"id":"post-user-id","commentJson":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"id\" : 123,  /* user id */\n    \"name\" : \"Tom\",  /* user name */\n    \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n    \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n    \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n    \"ones\" : [ {  /* a List example */\n      \"oneId\" : 111,  /* one id */\n      \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n    } ],\n    \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n      \"0\" : {\n        \"twoId\" : 222,  /* two id */\n        \"twoArray\" : [ \"abc\" ]  /* array */\n      }\n    },\n    \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n      \"?\" : [ {\n        \"threeId\" : 222,  /* three id */\n        \"threeList\" : [ \"xyz\" ]  /* list */\n      } ]\n    },\n    \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n    \"updateTime\" : \"2018-12-31\"  /* time2 */\n  }\n}"},{"title":"user operate","develop":"xxx - xxx@xyz.com","exampleUrl":"/api-info-en/post-user-operate.json","method":"POST","url":"/user/operate","paramList":[{"name":"type","dataType":"boolean","desc":"move type(0 means from top to bottom, 1 means from bottom to top, the default is 0)"}],"id":"post-user-operate","commentJson":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"total\" : 0,  /* SELECT COUNT(*) FROM ... */\n    \"list\" : [ {  /* SELECT ... FROM ... LIMIT 0, 15 */\n      \"id\" : 123,  /* user id */\n      \"name\" : \"Tom\",  /* user name */\n      \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n      \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n      \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n      \"ones\" : [ {  /* a List example */\n        \"oneId\" : 111,  /* one id */\n        \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n      } ],\n      \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n        \"0\" : {\n          \"twoId\" : 222,  /* two id */\n          \"twoArray\" : [ \"abc\" ]  /* array */\n        }\n      },\n      \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n        \"?\" : [ {\n          \"threeId\" : 222,  /* three id */\n          \"threeList\" : [ \"xyz\" ]  /* list */\n        } ]\n      },\n      \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n      \"updateTime\" : \"2018-12-31\"  /* time2 */\n    } ]\n  }\n}"}]},{"name":"product","info":"product","urlList":[{"title":"product list(Pagination)","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/get-product.json","method":"GET","url":"/product","useGlobalParam":"1","paramList":[{"name":"name","dataType":"String","desc":"product name","hasTextarea":"1"},{"name":"page","dataType":"int","desc":"Current page"},{"name":"limit","dataType":"int","desc":"Number of pages per page"}],"id":"get-product","commentJson":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"total\" : 0,  /* SELECT COUNT(*) FROM ... */\n    \"list\" : [ {  /* SELECT ... FROM ... LIMIT 0, 15 */\n      \"id\" : 123,  /* user id */\n      \"name\" : \"Tom\",  /* user name */\n      \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n      \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n      \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n      \"ones\" : [ {  /* a List example */\n        \"oneId\" : 111,  /* one id */\n        \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n      } ],\n      \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n        \"0\" : {\n          \"twoId\" : 222,  /* two id */\n          \"twoArray\" : [ \"abc\" ]  /* array */\n        }\n      },\n      \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n        \"?\" : [ {\n          \"threeId\" : 222,  /* three id */\n          \"threeList\" : [ \"xyz\" ]  /* list */\n        } ]\n      },\n      \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n      \"updateTime\" : \"2018-12-31\"  /* time2 */\n    } ]\n  }\n}"},{"title":"product detail(Model)","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/get-product-id.json","method":"GET","url":"/product/{id}","useGlobalParam":"1","paramList":[{"name":"id","dataType":"long","hasMust":"1","desc":"product id"}],"id":"get-product-id","commentJson":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"id\" : 123,  /* user id */\n    \"name\" : \"Tom\",  /* user name */\n    \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n    \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n    \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n    \"ones\" : [ {  /* a List example */\n      \"oneId\" : 111,  /* one id */\n      \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n    } ],\n    \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n      \"0\" : {\n        \"twoId\" : 222,  /* two id */\n        \"twoArray\" : [ \"abc\" ]  /* array */\n      }\n    },\n    \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n      \"?\" : [ {\n        \"threeId\" : 222,  /* three id */\n        \"threeList\" : [ \"xyz\" ]  /* list */\n      } ]\n    },\n    \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n    \"updateTime\" : \"2018-12-31\"  /* time2 */\n  }\n}"},{"title":"product list(List)","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/get-product-list.json","method":"GET","url":"/product/list","paramList":[{"name":"type","dataType":"enum(ProductType)","desc":"product type(Normal, Discount)"}],"id":"get-product-list","commentJson":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : [ {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"id\" : 123,  /* user id */\n    \"name\" : \"Tom\",  /* user name */\n    \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n    \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n    \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n    \"ones\" : [ {  /* a List example */\n      \"oneId\" : 111,  /* one id */\n      \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n    } ],\n    \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n      \"0\" : {\n        \"twoId\" : 222,  /* two id */\n        \"twoArray\" : [ \"abc\" ]  /* array */\n      }\n    },\n    \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n      \"?\" : [ {\n        \"threeId\" : 222,  /* three id */\n        \"threeList\" : [ \"xyz\" ]  /* list */\n      } ]\n    },\n    \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n    \"updateTime\" : \"2018-12-31\"  /* time2 */\n  } ]\n}"},{"title":"product xxx(Map)","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/get-product-map.json","method":"GET","url":"/product/map","useGlobalParam":"1","paramList":[{"name":"id","dataType":"long","desc":"yy"},{"name":"userId","dataType":"long","hasMust":"1","desc":"user id"},{"name":"type","dataType":"enum(ProductType)","hasMust":"1","desc":"product type(Normal, Discount)"},{"name":"gender","dataType":"enum(Gender)","showDataType":"int","desc":"user gender(0:Nil, 1:Male, 2:Female)"},{"name":"createTime","dataType":"Date","hasMust":"1","desc":"MM/DD/YYYY HH:mm:ss","datePattern":"MM/DD/YYYY HH:mm:ss"}],"id":"get-product-map","commentJson":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"?\" : {\n      \"id\" : 123,  /* user id */\n      \"name\" : \"Tom\",  /* user name */\n      \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n      \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n      \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n      \"ones\" : [ {  /* a List example */\n        \"oneId\" : 111,  /* one id */\n        \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n      } ],\n      \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n        \"0\" : {\n          \"twoId\" : 222,  /* two id */\n          \"twoArray\" : [ \"abc\" ]  /* array */\n        }\n      },\n      \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n        \"?\" : [ {\n          \"threeId\" : 222,  /* three id */\n          \"threeList\" : [ \"xyz\" ]  /* list */\n        } ]\n      },\n      \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n      \"updateTime\" : \"2018-12-31\"  /* time2 */\n    }\n  }\n}"}]},{"name":"response","info":"response","urlList":[{"title":"response mode","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/post-response-demo-object.json","method":"POST","url":"/response/demo-object","useGlobalParam":"1","paramList":[{"name":"name","dataType":"String","hasMust":"1","desc":"product name","hasTextarea":"1"},{"name":"id","dataType":"long","paramType":"1","hasMust":"1","desc":"head 1"},{"name":"some","dataType":"String","paramType":"1","hasMust":"1","desc":"head 2"},{"name":"gender","dataType":"enum(Gender)","desc":"0:Nil, 1:Male, 2:Female","example":"2"},{"name":"file1","dataType":"file","desc":"upload file1","hasFile":"1"},{"name":"file2","dataType":"file","hasMust":"1","desc":"upload file2","hasFile":"1"},{"name":"page","dataType":"int","desc":"Current page"},{"name":"limit","dataType":"int","desc":"Number of pages per page"}],"responseList":[{"code":200,"msg":"success"},{"code":404,"msg":"not found"}],"id":"post-response-demo-object","commentJson":"{\n  \"id\" : 123,  /* user id */\n  \"name\" : \"Tom\",  /* user name */\n  \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n  \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n  \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n  \"ones\" : [ {  /* a List example */\n    \"oneId\" : 111,  /* one id */\n    \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n  } ],\n  \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n    \"0\" : {\n      \"twoId\" : 222,  /* two id */\n      \"twoArray\" : [ \"abc\" ]  /* array */\n    }\n  },\n  \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n    \"?\" : [ {\n      \"threeId\" : 222,  /* three id */\n      \"threeList\" : [ \"xyz\" ]  /* list */\n    } ]\n  },\n  \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n  \"updateTime\" : \"2018-12-31\"  /* time2 */\n}"},{"title":"response List","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/get-response-demo-list.json","method":"GET","url":"/response/demo-list","useGlobalParam":"1","paramList":[{"name":"name","dataType":"String","desc":"product name","hasTextarea":"1"},{"name":"page","dataType":"int","desc":"Current page"},{"name":"limit","dataType":"int","desc":"Number of pages per page"}],"responseList":[{"code":200,"msg":"success"},{"code":500,"msg":"Returns when name is xyz, error","comment":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : {\n    \"total\" : 0,\n    \"list\" : [ {\n      \"id\" : 123,\n      \"name\" : \"Tom\",\n      \"gender\" : 1,\n      \"productTypes\" : [ \"Discount\" ],\n      \"userTypes\" : [ 10 ],\n      \"ones\" : [ {\n        \"oneId\" : 111,\n        \"one\" : \"<span style='color:red;'>rich text</span>\"\n      } ],\n      \"twos\" : {\n        \"0\" : {\n          \"twoId\" : 222,\n          \"twoArray\" : [ \"abc\" ]\n        }\n      },\n      \"threes\" : {\n        \"?\" : [ {\n          \"threeId\" : 222,\n          \"threeList\" : [ \"xyz\" ]\n        } ]\n      },\n      \"createTime\" : \"01/13/2018 04:13:14\",\n      \"updateTime\" : \"2018-12-31\"\n    } ]\n  }\n}","returnList":[{"name":"msg","type":"String","desc":"Return message. for example: address add success. etc..."},{"name":"data","type":"object","desc":"Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;total","type":"int","desc":"SELECT COUNT(*) FROM ..."},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;list","type":"list","desc":"SELECT ... FROM ... LIMIT 0, 15"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id","type":"long","desc":"user id"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name","type":"String","desc":"user name"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gender","type":"enum(Gender)","desc":"user gender(0:Nil, 1:Male, 2:Female)"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;productTypes","type":"enum(ProductType)[]","desc":"product type(Normal, Discount)"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;userTypes","type":"enum(UserType)","desc":"user type(1:Normal, 10:Vip)"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ones","type":"demoOneVo","desc":"a List example"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oneId","type":"long","desc":"one id"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one","type":"String","desc":"str"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;twos","type":"map","desc":"a Map example, key is int, still output as \"0\" string when serializing"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0","type":"int","desc":""},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;twoId","type":"long","desc":"two id"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;twoArray","type":"String[]","desc":"array"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;threes","type":"map","desc":"a Map, key is a String, which is output as \"?\" when serialized"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;?","type":"String","desc":""},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;threeId","type":"long","desc":"three id"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;threeList","type":"String","desc":"list"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;createTime","type":"Date","desc":"time1"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;updateTime","type":"Date","desc":"time2"}]}],"returnList":[{"name":"id","type":"long","desc":"user id"},{"name":"name","type":"String","desc":"user name"},{"name":"gender","type":"enum(Gender)","desc":"user gender(0:Nil, 1:Male, 2:Female)"},{"name":"productTypes","type":"enum(ProductType)[]","desc":"product type(Normal, Discount)"},{"name":"userTypes","type":"enum(UserType)","desc":"user type(1:Normal, 10:Vip)"},{"name":"ones","type":"demoOneVo","desc":"a List example"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;oneId","type":"long","desc":"one id"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;one","type":"String","desc":"str"},{"name":"twos","type":"map","desc":"a Map example, key is int, still output as \"0\" string when serializing"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;0","type":"int","desc":""},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;twoId","type":"long","desc":"two id"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;twoArray","type":"String[]","desc":"array"},{"name":"threes","type":"map","desc":"a Map, key is a String, which is output as \"?\" when serialized"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;?","type":"String","desc":""},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;threeId","type":"long","desc":"three id"},{"name":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;threeList","type":"String","desc":"list"},{"name":"createTime","type":"Date","desc":"time1"},{"name":"updateTime","type":"Date","desc":"time2"}],"id":"get-response-demo-list","commentJson":"[ {\n  \"id\" : 123,\n  \"name\" : \"Tom\",\n  \"gender\" : 1,\n  \"productTypes\" : [ \"Discount\" ],\n  \"userTypes\" : [ 10 ],\n  \"ones\" : [ {\n    \"oneId\" : 111,\n    \"one\" : \"<span style='color:red;'>rich text</span>\"\n  } ],\n  \"twos\" : {\n    \"0\" : {\n      \"twoId\" : 222,\n      \"twoArray\" : [ \"abc\" ]\n    }\n  },\n  \"threes\" : {\n    \"?\" : [ {\n      \"threeId\" : 222,\n      \"threeList\" : [ \"xyz\" ]\n    } ]\n  },\n  \"createTime\" : \"01/13/2018 04:13:14\",\n  \"updateTime\" : \"2018-12-31\"\n} ]"},{"title":"response Map","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/get-response-demo-map.json","method":"GET","url":"/response/demo-map","useGlobalParam":"1","paramList":[{"name":"name","dataType":"String","desc":"product name","hasTextarea":"1"},{"name":"page","dataType":"int","desc":"Current page"},{"name":"limit","dataType":"int","desc":"Number of pages per page"}],"responseList":[{"code":200,"msg":"success"},{"code":403,"msg":"Returns when name is xyz, no permission(redirect to login page)"}],"id":"get-response-demo-map","commentJson":"{\n  \"?\" : {\n    \"id\" : 123,  /* user id */\n    \"name\" : \"Tom\",  /* user name */\n    \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n    \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n    \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n    \"ones\" : [ {  /* a List example */\n      \"oneId\" : 111,  /* one id */\n      \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n    } ],\n    \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n      \"0\" : {\n        \"twoId\" : 222,  /* two id */\n        \"twoArray\" : [ \"abc\" ]  /* array */\n      }\n    },\n    \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n      \"?\" : [ {\n        \"threeId\" : 222,  /* three id */\n        \"threeList\" : [ \"xyz\" ]  /* list */\n      } ]\n    },\n    \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n    \"updateTime\" : \"2018-12-31\"  /* time2 */\n  }\n}"},{"title":"Customize response 1","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/get-response-demo-custom1.json","method":"GET","url":"/response/demo-custom1","useGlobalParam":"1","id":"get-response-demo-custom1","commentJson":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"?\" : {\n      \"id\" : 123,  /* user id */\n      \"name\" : \"Tom\",  /* user name */\n      \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n      \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n      \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n      \"ones\" : [ {  /* a List example */\n        \"oneId\" : 111,  /* one id */\n        \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n      } ],\n      \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n        \"0\" : {\n          \"twoId\" : 222,  /* two id */\n          \"twoArray\" : [ \"abc\" ]  /* array */\n        }\n      },\n      \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n        \"?\" : [ {\n          \"threeId\" : 222,  /* three id */\n          \"threeList\" : [ \"xyz\" ]  /* list */\n        } ]\n      },\n      \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n      \"updateTime\" : \"2018-12-31\"  /* time2 */\n    }\n  }\n}"},{"title":"Customize response 2","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/post-response-demo-custom2.json","method":"POST","url":"/response/demo-custom2","useGlobalParam":"1","paramList":[{"name":"name","dataType":"String","desc":"product name","hasTextarea":"1"}],"id":"post-response-demo-custom2","commentJson":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"total\" : 0,  /* SELECT COUNT(*) FROM ... */\n    \"list\" : [ [ {  /* SELECT ... FROM ... LIMIT 0, 15 */\n      \"id\" : 123,  /* user id */\n      \"name\" : \"Tom\",  /* user name */\n      \"gender\" : 1,  /* user gender(0:Nil, 1:Male, 2:Female) */\n      \"productTypes\" : [ \"Discount\" ],  /* product type(Normal, Discount) */\n      \"userTypes\" : [ 10 ],  /* user type(1:Normal, 10:Vip) */\n      \"ones\" : [ {  /* a List example */\n        \"oneId\" : 111,  /* one id */\n        \"one\" : \"<span style='color:red;'>rich text</span>\"  /* str */\n      } ],\n      \"twos\" : {  /* a Map example, key is int, still output as \"0\" string when serializing */\n        \"0\" : {\n          \"twoId\" : 222,  /* two id */\n          \"twoArray\" : [ \"abc\" ]  /* array */\n        }\n      },\n      \"threes\" : {  /* a Map, key is a String, which is output as \"?\" when serialized */\n        \"?\" : [ {\n          \"threeId\" : 222,  /* three id */\n          \"threeList\" : [ \"xyz\" ]  /* list */\n        } ]\n      },\n      \"createTime\" : \"01/13/2018 04:13:14\",  /* time1 */\n      \"updateTime\" : \"2018-12-31\"  /* time2 */\n    } ] ]\n  }\n}"},{"title":"recursive 1","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/get-response-demo-recursive1.json","method":"GET","url":"/response/demo-recursive1","useGlobalParam":"1","id":"get-response-demo-recursive1","commentJson":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"id\" : 0,\n    \"name\" : \"\",\n    \"self\" : null  /* !!!RECURSIVE OBJECT!!! */\n  }\n}"},{"title":"recursive 2","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/get-response-demo-recursive2.json","method":"GET","url":"/response/demo-recursive2","useGlobalParam":"1","paramList":[{"name":"name","dataType":"String","desc":"product name","hasTextarea":"1"}],"id":"get-response-demo-recursive2","commentJson":"{\n  \"msg\" : \"Return message. for example: address add success. etc...\",\n  \"data\" : {  /* Return data. {\"id\":1} or [{\"id\":1},{\"id\":2}] depending on the specific business */\n    \"id\" : 0,\n    \"r10\" : {\n      \"id\" : 0,\n      \"r0\" : null  /* !!!RECURSIVE OBJECT!!! */\n    }\n  }\n}"},{"title":"recursive 3","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/get-response-demo-recursive3.json","method":"GET","url":"/response/demo-recursive3","useGlobalParam":"1","paramList":[{"name":"name","dataType":"String","desc":"product name","hasTextarea":"1"},{"name":"page","dataType":"int","desc":"Current page"},{"name":"limit","dataType":"int","desc":"Number of pages per page"}],"id":"get-response-demo-recursive3","commentJson":"{\n  \"id\" : 0,\n  \"name\" : \"\",\n  \"r2\" : {\n    \"gender\" : 0,  /* 0:Nil, 1:Male, 2:Female */\n    \"some\" : \"\",\n    \"r3\" : {\n      \"?\" : {\n        \"time\" : 1568797665719,\n        \"rid\" : 0,\n        \"r1\" : [ {\n          \"id\" : 0,\n          \"name\" : \"\",\n          \"r2\" : null  /* !!!RECURSIVE OBJECT!!! */\n        } ]\n      }\n    }\n  }\n}"},{"title":"No way to parse return 1","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/get-response-demo-error1.json","method":"GET","url":"/response/demo-error1","useGlobalParam":"1","paramList":[{"name":"create","dataType":"Date","desc":"MM/DD/YYYY","datePattern":"MM/DD/YYYY"}],"id":"get-response-demo-error1"},{"title":"No way to parse return 2","develop":"ppp - ppp@xyz.com","exampleUrl":"/api-info-en/get-response-demo-error2.json","method":"GET","url":"/response/demo-error2","useGlobalParam":"1","paramList":[{"name":"time","dataType":"String","showDataType":"date","desc":"HH:mm:ss","datePattern":"HH:mm:ss"},{"name":"page","dataType":"int","desc":"Current page"},{"name":"limit","dataType":"int","desc":"Number of pages per page"}],"id":"get-response-demo-error2"}]}]},"copyright":{"title":"api document example","team":"Technical department - Java group","version":"1.0.0","copyright":"GPL V3","groupCount":3,"apiCount":19}}
